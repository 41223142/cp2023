<h1>About</h1>
<p><a href="https://github.com/41223142/cp2023">https://github.com/41223142/cp2023</a> (個人倉儲連結)</p>
<p><a href="https://41223150.github.io/cp2023_ag5/content/index.html">https://41223150.github.io/cp2023_ag5/content/index.html</a> (小組網站連結)</p>
<p><a href="https://github.com/41223150/cp2023_ag5">https://github.com/41223150/cp2023_ag5</a> (小組倉儲)</p><h1>各國國旗</h1>
<p><img alt="" height="619" src="/images/roc_flag_in_gd.png" width="929"/></p>
<p><img alt="" height="421" src="/images/usa_flag.png" width="800"/></p>
<p><img alt="" height="400" src="/images/japan_flag.png" width="600"/></p>
<p><img alt="" height="600" src="/images/uk_flag.png" width="1200"/></p><h1>網路設定</h1>
<p><a href="https://mde.tw/cpnote/content/links.html">個人校內ipv6連接編號</a></p>
<p><span>可以用</span><span>學校提供ipv6，</span><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/41223118_nfu_edu_tw/EZivhkrZZ1VKnNPhGJLt5dIBeQ7uU5AV1EdxH-3xAHUl4w?e=2tfZ1s">cadlab_network_setting.7z</a><span>下載這個檔案，只要更改裡面的</span><span><strong>.ps1</strong></span><span>檔案，只要用另一個<span><strong>.bat</strong></span><span>檔案以</span><span>管理者身分啟動</span><span>，就會幫你</span><span>關掉ipv4只啟動ipv6</span><span>並獲得自己的網段ip。</span></span></p>
<p><img caption="false" height="600" src="/images/3.png" width="468"/></p>
<p></p>
<p></p>
<p></p><h1>w5</h1>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">// 包含標準輸出入程式庫的標頭文件
// https://blog.csdn.net/weixin_38468077/article/details/101069365
// http://www.gnuplot.info/demo/
// https://github.com/sysprog21/rv32emu
// https://github.com/sysprog21/semu 
// https://docs.google.com/presentation/d/14N0cWG2SnBSqhc2cLF0_2VerB9FF8JN3
// https://cs61c.org/fa23/
// https://greenteapress.com/wp/think-python-2e/
// https://github.com/ecalvadi/c99-examples
// https://github.com/gouravthakur39/beginners-C-program-examples
// https://github.com/ergenekonyigit/Numerical-Analysis-Examples
// https://www.che.ncku.edu.tw/facultyweb/changct/html/teaching/CPPandMATLAB/Past/pdf%20Files/Chap02-Ling.pdf
// https://gteceducation.com.sg/Brochures/PROGRAMMING/C%20PROGRAMMING%20FULL.pdf
// https://jsommers.github.io/cbook/cbook.pdf
// https://jsommers.github.io/cbook/index.html
// http://student.itee.uq.edu.au/courses/csse2310/CProgrammingNotes.pdf
// http://cslibrary.stanford.edu/101/EssentialC.pdf
// https://publications.gbdirect.co.uk/c_book/
// https://www.fossil-scm.org/fossil-book/doc/2ndEdition/fossilbook.pdf
// ***** execute on replit 
// cd downloads
// cc gnuplot_ex1.c -o gnuplot_ex1
// ./gnuplot_ex1
#include &lt;stdio.h&gt;

// 主函式
int main() {
    // Start a Gnuplot process using popen
    FILE *gnuplotPipe = popen("gnuplot -persistent", "w");
    if (!gnuplotPipe) {
        fprintf(stderr, "Failed to start Gnuplot.\n");
        return 1;
    }

    // Use Gnuplot plotting commands, specify font and output as PNG
    fprintf(gnuplotPipe, "set terminal png font 'default,10' size 800,400\n");
    fprintf(gnuplotPipe, "set output './../images/gnuplot_ex1.png'\n");
    fprintf(gnuplotPipe, "plot sin(x)");
    // Close popen
    pclose(gnuplotPipe);

    return 0;
}</pre>
<p><img alt="" height="200" src="/images/gnuplot_ex1.png" width="400"/></p>
<h2>learn</h2>
<p>Map: site map 網站所有頁面</p>
<p>EditA: edit all pages, 使用時機為(1)解決多人共用網站時的衝突, 或(2)刪除特定頁面</p>
<p>Edit: edit one page, 先選頁面, 再選 Edit 然後才能進入編輯模式</p>
<p>Config: 編輯網站標題, 若要編輯 site title, 必須更改 init.py 中的 site_title 字串內容</p>
<p>Search: 頁面資料 html 原始碼內容搜尋</p>
<p>IUpload: image upload, 影像檔案上傳, 資料會放入 images 目錄中</p>
<p>IList: image file list, 列出存在 images 目錄下的影像檔案</p>
<p>FUpload: file upload, 一般檔案上傳功能, 資料會放入 downloads 目錄中</p>
<p>FList: file list, 列出位於 downloads 目錄下的檔案</p>
<p>Logout: 登出</p>
<p>Convert: 將 config/content.htm 經過分頁程式處理後, 轉為 content 目錄下的超文件</p><h1>w6</h1>
<h2>Taiwan</h2>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false"></pre>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">// https://en.wikipedia.org/wiki/Flag_of_the_Republic_of_China
// 內政部國旗參考資料: https://www.moi.gov.tw/cp.aspx?n=10621
// cc roc_flag_in_gd.c -lgd -lm to link with gd and math library
// https://www.rapidtables.com/web/color/RGB_Color.html
// 幾何形狀著色與繪圖練習
// 以下 gd 繪圖程式嘗試畫出 ROC 國旗, 請根據下列程式內容完成後續的國旗繪圖
#include &lt;stdio.h&gt;
#include &lt;gd.h&gt;
#include &lt;math.h&gt;

void draw_roc_flag(gdImagePtr img);
void draw_white_sun(gdImagePtr img, int x, int y, int size, int color);

int main() {
    // width 3: height 2
    int width = 1200;
    // 國旗長寬比為 3:2
    int height = (int)(width*2.0 / 3.0);

    gdImagePtr img = gdImageCreateTrueColor(width, height);
    gdImageAlphaBlending(img, 0);

    draw_roc_flag(img);

    FILE *outputFile = fopen("./../images/roc_flag_in_gd.png", "wb");
    if (outputFile == NULL) {
        fprintf(stderr, "Error opening the output file.\n");
        return 1;
    }
    gdImagePngEx(img, outputFile, 9);
    fclose(outputFile);
    gdImageDestroy(img);
    return 0;
}

void draw_roc_flag(gdImagePtr img) {
    int width = gdImageSX(img);
    int height = gdImageSY(img);
    int red, white, blue;
    // 白日位於青天面積正中央, 因此中心點座標為長寬各 1/4 處
    int center_x = (int)(width/4);
    int center_y = (int)(height/4);
    // gdImageFilledEllipse 需以長寬方向的 diameter 作圖
    // 由於中央白日圓形的半徑為青天寬度的 1/8
    // 因此中央白日圓形的直徑為青天寬度的 1/4, 也就是國旗寬度的 1/8
    // 而且白日十二道光芒的外圍圓形其半徑也是國旗寬度的1/8
    int sun_radius = (int)(width/8);
    // 中央白日圓形的直徑等於十二道光芒外圍圓形的半徑
    int white_circle_dia = sun_radius;
    // 中央藍色圓形半徑為中央白日的 1又 2/15
    int blue_circle_dia = white_circle_dia +  white_circle_dia*2/15;
    // 根據 https://www.moi.gov.tw/cp.aspx?n=10621 訂定國旗三種顏色值
    red = gdImageColorAllocate(img, 255, 0, 0); // 紅色
    white = gdImageColorAllocate(img, 255, 255, 255); // 白色
    blue = gdImageColorAllocate(img, 0, 0, 149); // 藍色
    // 根據畫布大小塗上紅色長方形區域
    gdImageFilledRectangle(img, 0, 0, width, height, red);
    // 青天面積為整面國旗的 1/4, 也是採用長方形塗色
    gdImageFilledRectangle(img, 0, 0, (int)(width/2.0), (int)(height/2.0), blue);
    // 先設法以填色畫出六個白色堆疊菱形
    draw_white_sun(img, center_x, center_y, sun_radius, white);
    // 利用一個藍色大圓與白色小圓畫出藍色環狀
    gdImageFilledEllipse(img, center_x, center_y, blue_circle_dia, blue_circle_dia, blue);
    gdImageFilledEllipse(img, center_x, center_y, white_circle_dia, white_circle_dia, white);

}

void draw_white_sun(gdImagePtr img, int center_x, int center_y, int sun_radius, int color) {
    // M_PI 大小定義於 math.h 標頭檔中, 因為三角函數中採用徑度為角度單位
    // 因此定義將角度轉為徑度的轉換變數為 deg, 角度值乘上 deg 就可轉為徑度
    float deg = M_PI/180;
    // 根據十二道光芒的每一尖角的角度為 15 度, 求出其對應直角三角形的另一角度為 75 度
    // 求出十二道光芒中任一菱形的 small radius, 也就是菱形的另一個對應小圓的半徑大小
    float sr = sun_radius/tan(75*deg);
    int ax, ay, bx, by, dx, dy, ex, ey;
    gdPoint points[4];
    /* 在塗上十二道光芒中的單一菱形區域之前, 先以座標點畫線測試是否正確
    ax = center_x;
    ay = center_y - sun_radius;
    bx = center_x - sun_radius*tan(15*deg);
    by = center_y;
    ex = center_x;
    ey = center_y + sun_radius;
    dx = center_x + sun_radius*tan(15*deg);
    dy = center_y;
    // AB
    gdImageLine(img, ax, ay, bx, by, color);
    // BE
    gdImageLine(img, bx, by, ex, ey, color);
    // ED
    gdImageLine(img, ex, ey, dx, dy, color);
    // DA
    gdImageLine(img, dx, dy, ax, ay, color);
    */
    ax = center_x;
    ay = center_y - sun_radius;
    bx = center_x - sun_radius*tan(15*deg);
    by = center_y;
    ex = center_x;
    ey = center_y + sun_radius;
    dx = center_x + sun_radius*tan(15*deg);
    dy = center_y;
    // 確定單一菱形區域的塗色正確後, 利用迴圈每次轉動 30 度, 總共轉六次即可塗上十二道光芒區域
    for (int i=1;i&lt;=6;i++){
    // A
    points[0].x = ax+sun_radius*sin(30*deg*i);
    points[0].y = ay+sun_radius-sun_radius*cos(30*deg*i);
    // B
    points[1].x = bx+sr-sr*cos(30*deg*i);
    points[1].y = by-sr*sin(30*deg*i);
    // E
    points[2].x = ex-sun_radius*sin(30*deg*i);
    points[2].y = ey-(sun_radius-sun_radius*cos(30*deg*i));
    // D
    points[3].x = dx-(sr-sr*cos(30*deg*i));
    points[3].y = dy+sr*sin(30*deg*i);
    // 對菱形區域範圍塗色
    gdImageFilledPolygon(img, points, 4, color);
    // 在菱形區域外圍畫線, 明確界定菱形範圍
    gdImagePolygon(img, points, 4, color);
    }
}</pre>
<p></p>
<p><img alt="" height="267" src="/images/roc_flag_in_gd.png" width="400"/></p>
<h2>USA</h2>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
#include &lt;gd.h&gt;
#include &lt;math.h&gt;

void draw_usa_flag(gdImagePtr img);
void draw_star(gdImagePtr img, int x, int y, int size, int color, double rotation_angle);

int main() {
    int width = 800;
    int height = (int)(width / 1.9);

    gdImagePtr img = gdImageCreateTrueColor(width, height);
    gdImageAlphaBlending(img, 0);

    draw_usa_flag(img);

    FILE *outputFile = fopen("./../images/usa_flag.png", "wb");
    if (outputFile == NULL) {
        fprintf(stderr, "打开输出文件时出错。\n");
        return 1;
    }

    gdImagePngEx(img, outputFile, 9);
    fclose(outputFile);
    gdImageDestroy(img);

    return 0;
}

void draw_usa_flag(gdImagePtr img) {
    int width = gdImageSX(img);
    int height = gdImageSY(img);
    int red, white, blue;
    // 国旗颜色
    red = gdImageColorAllocate(img, 178, 34, 52); // 红色条纹
    white = gdImageColorAllocate(img, 255, 255, 255); // 白色条纹
    blue = gdImageColorAllocate(img, 60, 59, 110); // 蓝色矩形

    int stripe_height = height / 13;
    int stripe_width = width;
    int star_size = (int)(0.0308 * height); // 星星大小

    for (int y = 0; y &lt; height; y += stripe_height) {
        if (y / stripe_height % 2 == 0) {
            gdImageFilledRectangle(img, 0, y, stripe_width, y + stripe_height, red);
        } else {
            gdImageFilledRectangle(img, 0, y, stripe_width, y + stripe_height, white);
        }
    }

    gdImageFilledRectangle(img, 0, 0, width * 2 / 5, stripe_height * 7, blue);

    int star_spacing_x = (int)(0.129 * height); // 横向星星之间的间距
    int star_spacing_y = (int)(0.054 * height); // 纵向星星之间的间距
    int star_start_x = (int)(0.125 * height); // 星星的起始X位置
    int star_start_y = (int)(0.0485 * height); // 星星的起始Y位置

    for (int row = 0; row &lt; 9; row++) {
        int starsPerRow = (row % 2 == 0) ? 6 : 5;

        // 计算2、4、6和8排星星的偏移量
        int offset_x = (row % 2 == 0) ? star_spacing_x / -2 : 0;

        for (int star = 0; star &lt; starsPerRow; star++) {
            int x = star_start_x + star * star_spacing_x + offset_x;

            // 旋转角度（以弧度为单位）
            double rotation_angle = M_PI / 5; // 忘記多少度的旋转

            int y = star_start_y + row * star_spacing_y;
            draw_star(img, x, y, star_size, white, rotation_angle);
        }
    }
}

void draw_star(gdImagePtr img, int x, int y, int size, int color, double rotation_angle) {
    gdPoint points[10];

    for (int i = 0; i &lt; 10; i++) {
        double angle = M_PI / 2 + i * 2 * M_PI / 10 + rotation_angle;
        int radius = (i % 2 == 0) ? size : size / 2;
        points[i].x = x + radius * cos(angle);
        points[i].y = y + radius * sin(angle);
    }

    // 用指定的颜色填充星星
    gdImageFilledPolygon(img, points, 10, color);
}
</pre>
<p><img alt="" height="211" src="/images/usa_flag.png" width="400"/></p>
<h2>Japan</h2>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
#include &lt;gd.h&gt;
#include &lt;math.h&gt;

void draw_japan_flag(gdImagePtr img);
void draw_red_sun(gdImagePtr img, int x, int y, int size, int color);

int main() {
    int originalWidth = 1200;
    int originalHeight = (int)(originalWidth * 2.0 / 3.0);
    gdImagePtr img = gdImageCreateTrueColor(originalWidth, originalHeight);
    gdImageAlphaBlending(img, 0);

    draw_japan_flag(img);

    // 新的宽度和高度以适应 "images" 文件夹
    int newWidth = 600;
    int newHeight = (int)(newWidth * 2.0 / 3.0);

    // 创建新图像并进行缩放
    gdImagePtr resizedImage = gdImageCreateTrueColor(newWidth, newHeight);
    gdImageAlphaBlending(resizedImage, 0);
    gdImageCopyResampled(resizedImage, img, 0, 0, 0, 0, newWidth, newHeight, originalWidth, originalHeight);

  FILE *outputFile = fopen("./../images/japan_flag.png", "wb");
    if (outputFile == NULL) {
        fprintf(stderr, "Error opening the output file.\n");
        return 1;
    }
    gdImagePng(resizedImage, outputFile);
    fclose(outputFile);
    gdImageDestroy(img);
    gdImageDestroy(resizedImage);

    return 0;
}

void draw_japan_flag(gdImagePtr img) {
    int width = gdImageSX(img);
    int height = gdImageSY(img);

    // 创建一个白色背景
    int white = gdImageColorAllocate(img, 255, 255, 255);
    gdImageFilledRectangle(img, 0, 0, width - 1, height - 1, white);

    // 绘制红色圆圈（太阳）
    int red = gdImageColorAllocate(img, 255, 0, 0);
    int center_x = width / 2;
    int center_y = height / 2;
    int radius = (int)((width * 2) / 3);
    draw_red_sun(img, center_x, center_y, radius, red);
}

void draw_red_sun(gdImagePtr img, int x, int y, int size, int color) {
  // 減小 size 的值,例如將他的值減半
  size = size / 2;
    gdImageArc(img, x, y, size, size, 0, 360, color);
    gdImageFillToBorder(img, x, y, color, color);
}</pre>
<p><img alt="" height="267" src="/images/japan_flag.png" width="400"/></p>
<h2>Vietnam</h2>
<div>
<div class="syntaxhighlighter cpp" id="highlighter_523862">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
<div class="line number44 index43 alt1">44</div>
<div class="line number45 index44 alt2">45</div>
<div class="line number46 index45 alt1">46</div>
<div class="line number47 index46 alt2">47</div>
<div class="line number48 index47 alt1">48</div>
<div class="line number49 index48 alt2">49</div>
<div class="line number50 index49 alt1">50</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="cpp preprocessor">#include &lt;stdio.h&gt;</code></div>
<div class="line number2 index1 alt1"><code class="cpp preprocessor">#include &lt;gd.h&gt;</code></div>
<div class="line number3 index2 alt2"><code class="cpp preprocessor">#include &lt;math.h&gt;</code></div>
<div class="line number4 index3 alt1"> </div>
<div class="line number5 index4 alt2"><code class="cpp preprocessor">#define WIDTH 600</code></div>
<div class="line number6 index5 alt1"><code class="cpp preprocessor">#define HEIGHT 400</code></div>
<div class="line number7 index6 alt2"><code class="cpp preprocessor">#define RED 0xDC143C  // Crimson color</code></div>
<div class="line number8 index7 alt1"><code class="cpp preprocessor">#define YELLOW 0xFFFF00</code></div>
<div class="line number9 index8 alt2"> </div>
<div class="line number10 index9 alt1"><code class="cpp keyword bold">void</code> <code class="cpp plain">drawStar(gdImagePtr im, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">x, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">y, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">outerRadius, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">innerRadius, </code><code class="cpp color1 bold">int</code> <code class="cpp plain">color) {</code></div>
<div class="line number11 index10 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">double</code> <code class="cpp plain">angle = -M_PI / 2.0;  </code><code class="cpp comments">// Starting angle for the star</code></div>
<div class="line number12 index11 alt1"> </div>
<div class="line number13 index12 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdPoint starPoints[10];</code></div>
<div class="line number14 index13 alt1"> </div>
<div class="line number15 index14 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">for</code> <code class="cpp plain">(</code><code class="cpp color1 bold">int</code> <code class="cpp plain">i = 0; i &lt; 10; i++) {</code></div>
<div class="line number16 index15 alt1"><code class="cpp spaces">        </code><code class="cpp color1 bold">int</code> <code class="cpp plain">radius = i % 2 == 0 ? outerRadius : innerRadius;</code></div>
<div class="line number17 index16 alt2"><code class="cpp spaces">        </code><code class="cpp plain">starPoints[i].x = x + radius * </code><code class="cpp functions bold">cos</code><code class="cpp plain">(angle);</code></div>
<div class="line number18 index17 alt1"><code class="cpp spaces">        </code><code class="cpp plain">starPoints[i].y = y + radius * </code><code class="cpp functions bold">sin</code><code class="cpp plain">(angle);</code></div>
<div class="line number19 index18 alt2"><code class="cpp spaces">        </code><code class="cpp plain">angle += M_PI / 5.0;  </code><code class="cpp comments">// Angle between two consecutive points</code></div>
<div class="line number20 index19 alt1"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number21 index20 alt2"> </div>
<div class="line number22 index21 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledPolygon(im, starPoints, 10, color);</code></div>
<div class="line number23 index22 alt2"><code class="cpp plain">}</code></div>
<div class="line number24 index23 alt1"> </div>
<div class="line number25 index24 alt2"><code class="cpp keyword bold">void</code> <code class="cpp plain">drawVietnamFlag() {</code></div>
<div class="line number26 index25 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePtr im;</code></div>
<div class="line number27 index26 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">FILE</code> <code class="cpp plain">*output;</code></div>
<div class="line number28 index27 alt1"> </div>
<div class="line number29 index28 alt2"><code class="cpp spaces">    </code><code class="cpp plain">im = gdImageCreateTrueColor(WIDTH, HEIGHT);</code></div>
<div class="line number30 index29 alt1"><code class="cpp spaces">    </code><code class="cpp plain">output = </code><code class="cpp functions bold">fopen</code><code class="cpp plain">(</code><code class="cpp string">"vietnam_flag.png"</code><code class="cpp plain">, </code><code class="cpp string">"wb"</code><code class="cpp plain">);</code></div>
<div class="line number31 index30 alt2"> </div>
<div class="line number32 index31 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// Draw red background</code></div>
<div class="line number33 index32 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledRectangle(im, 0, 0, WIDTH - 1, HEIGHT - 1, RED);</code></div>
<div class="line number34 index33 alt1"> </div>
<div class="line number35 index34 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// Draw yellow star in the center</code></div>
<div class="line number36 index35 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">starSize = 60;</code></div>
<div class="line number37 index36 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">starX = WIDTH / 2;</code></div>
<div class="line number38 index37 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">starY = HEIGHT / 2;</code></div>
<div class="line number39 index38 alt2"> </div>
<div class="line number40 index39 alt1"><code class="cpp spaces">    </code><code class="cpp plain">drawStar(im, starX, starY, starSize, starSize / 2, YELLOW);</code></div>
<div class="line number41 index40 alt2"> </div>
<div class="line number42 index41 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePng(im, output);</code></div>
<div class="line number43 index42 alt2"><code class="cpp spaces">    </code><code class="cpp functions bold">fclose</code><code class="cpp plain">(output);</code></div>
<div class="line number44 index43 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageDestroy(im);</code></div>
<div class="line number45 index44 alt2"><code class="cpp plain">}</code></div>
<div class="line number46 index45 alt1"> </div>
<div class="line number47 index46 alt2"><code class="cpp color1 bold">int</code> <code class="cpp plain">main() {</code></div>
<div class="line number48 index47 alt1"><code class="cpp spaces">    </code><code class="cpp plain">drawVietnamFlag();</code></div>
<div class="line number49 index48 alt2"><code class="cpp spaces">    </code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div>
<div class="line number50 index49 alt1"><code class="cpp plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p><img alt="" height="267" src="https://41223146.github.io/cp2023/images/vietnam_flag.png" width="400"/></p>
<h2>UK</h2>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">  #include &lt;stdio.h&gt;
  #include &lt;gd.h&gt;
  #include &lt;math.h&gt;

  void draw_uk_flag(gdImagePtr img);
  void fillTriangle(gdImagePtr img, int x1, int y1, int x2, int y2, int x3, int y3, int color);

  int main() {
      // 設置國旗的寬和高
      int width = 1200;
      int height = width / 2;

      // 創建圖像
      gdImagePtr img = gdImageCreateTrueColor(width, height);
      gdImageAlphaBlending(img, 0);

      // 繪製英國國旗
      draw_uk_flag(img);

      // 將圖像保存到文件
      FILE *outputFile = fopen("./../images/uk_flag.png", "wb");
      if (outputFile == NULL) {
          fprintf(stderr, "打開输出文件時發生錯誤。\n");
          return 1;
      }
      gdImagePngEx(img, outputFile, 9);
      fclose(outputFile);
      gdImageDestroy(img);
      return 0;
  }



  void draw_uk_flag(gdImagePtr img) {
      int width = gdImageSX(img);
      int height = gdImageSY(img);

      int red, white, blue;
      red = gdImageColorAllocate(img, 204, 0, 0);       // 红色
      white = gdImageColorAllocate(img, 255, 255, 255); // 白色
      blue = gdImageColorAllocate(img, 0, 0, 153);      // 藍色

      gdImageFilledRectangle(img, 0, 0, width, height, blue);


    int x1, y1, x2, y2, x3, y3;
    {
      int line_thickness = 100;
      gdImageSetThickness(img, line_thickness);

      int x1, y1, x2, y2, x3, y3;

      // 繪製白色斜線
      x1 = 0;
      y1 = 600;
      x2 = 1200;
      y2 = 0;
      gdImageLine(img, x1, y1, x2, y2, white);

      x1 = 0;
      y1 = 0;
      x2 = 1200;
      y2 = 600;
      gdImageLine(img, x1, y1, x2, y2, white);
  }
    {
      int line_thickness = 33;
      gdImageSetThickness(img, line_thickness);


      // 繪製红色斜線
      x1 = 566;
      y1 = 300;
      x2 = 1166;
      y2 = 0;
      gdImageLine(img, x1, y1, x2, y2, red);

      x1 = 1233;
      y1 = 600;
      x2 = 633;
      y2 = 300;
      gdImageLine(img, x1, y1, x2, y2, red);

      x1 = 566;
      y1 = 300;
      x2 = -33;
      y2 = 0;
      gdImageLine(img, x1, y1, x2, y2, red);

      x1 = 600;
      y1 = 316.5;
      x2 = 0;
      y2 = 616.5;
      gdImageLine(img, x1, y1, x2, y2, red);
    }
    {
    int line_thickness = 33;
    gdImageSetThickness(img, line_thickness);

    int x1, y1, x2, y2, x3, y3;

    // 繪製  斜線
    x1 = 0;
    y1 = 600;
    x2 = 1200;
    y2 = 0;
    gdImageLine(img, x1, y1, x2, y2, red );


    x1 = 1200;
      y1 = 16.5;
      x2 = 600;
      y2 = 316.5;
      gdImageLine(img, x1, y1, x2, y2, white);


    x1 = 0;
      y1 = 583.5;
      x2 = 600;
      y2 = 283.5;
      gdImageLine(img, x1, y1, x2, y2, white);


    }

      // 繪製白色十字
      int cross_width = width / 32;
      int cross_arm_width = width / 32;
      int center_x = width / 2;
      int center_y = height / 2;

      gdImageFilledRectangle(img, center_x + 2.7 * cross_width, 0, center_x - 2.7 * cross_width, height, white);
      gdImageFilledRectangle(img, 0, center_y + 2.7 * cross_arm_width, width, center_y - 2.7 * cross_arm_width, white);

      // 繪製红色十字
      gdImageFilledRectangle(img, center_x + 1.5 * cross_width, 0, center_x - 1.5 * cross_width, height, red);
      gdImageFilledRectangle(img, 0, center_y + 1.5 * cross_arm_width, width, center_y - 1.5 * cross_arm_width, red);
  }</pre>
<p><img alt="" height="490" src="/images/uk_flag.png" width="980"/></p>
<p></p><h1>w7</h1>
<h2>korea</h2>
<p><img caption="false" height="451" src="https://zhe41223118.github.io/cp2023/images/korean.png" width="677"/></p>
<div>
<div class="syntaxhighlighter js" id="highlighter_775767">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
<div class="line number44 index43 alt1">44</div>
<div class="line number45 index44 alt2">45</div>
<div class="line number46 index45 alt1">46</div>
<div class="line number47 index46 alt2">47</div>
<div class="line number48 index47 alt1">48</div>
<div class="line number49 index48 alt2">49</div>
<div class="line number50 index49 alt1">50</div>
<div class="line number51 index50 alt2">51</div>
<div class="line number52 index51 alt1">52</div>
<div class="line number53 index52 alt2">53</div>
<div class="line number54 index53 alt1">54</div>
<div class="line number55 index54 alt2">55</div>
<div class="line number56 index55 alt1">56</div>
<div class="line number57 index56 alt2">57</div>
<div class="line number58 index57 alt1">58</div>
<div class="line number59 index58 alt2">59</div>
<div class="line number60 index59 alt1">60</div>
<div class="line number61 index60 alt2">61</div>
<div class="line number62 index61 alt1">62</div>
<div class="line number63 index62 alt2">63</div>
<div class="line number64 index63 alt1">64</div>
<div class="line number65 index64 alt2">65</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js preprocessor">#include &lt;stdio.h&gt;</code></div>
<div class="line number2 index1 alt1"><code class="js preprocessor">#include &lt;gd.h&gt;</code></div>
<div class="line number3 index2 alt2"><code class="js preprocessor">#include &lt;math.h&gt;</code></div>
<div class="line number4 index3 alt1"> </div>
<div class="line number5 index4 alt2"><code class="js comments">// Function prototype</code></div>
<div class="line number6 index5 alt1"><code class="js plain">void draw_korean_flag(gdImagePtr img);</code></div>
<div class="line number7 index6 alt2"> </div>
<div class="line number8 index7 alt1"><code class="js plain">int main() {</code></div>
<div class="line number9 index8 alt2"><code class="js spaces">    </code><code class="js comments">// width 3: height 2</code></div>
<div class="line number10 index9 alt1"><code class="js spaces">    </code><code class="js plain">int width = 1200;</code></div>
<div class="line number11 index10 alt2"><code class="js spaces">    </code><code class="js plain">int height = (int)(width * 2.0 / 3.0);</code></div>
<div class="line number12 index11 alt1"> </div>
<div class="line number13 index12 alt2"><code class="js spaces">    </code><code class="js plain">gdImagePtr img = gdImageCreateTrueColor(width, height);</code></div>
<div class="line number14 index13 alt1"><code class="js spaces">    </code><code class="js plain">gdImageAlphaBlending(img, 0);</code></div>
<div class="line number15 index14 alt2"> </div>
<div class="line number16 index15 alt1"><code class="js spaces">    </code><code class="js plain">draw_korean_flag(img);</code></div>
<div class="line number17 index16 alt2"> </div>
<div class="line number18 index17 alt1"><code class="js spaces">    </code><code class="js plain">FILE *outputFile = fopen(</code><code class="js string">"Y:/tmp/c_ex/1.png"</code><code class="js plain">, </code><code class="js string">"wb"</code><code class="js plain">);</code></div>
<div class="line number19 index18 alt2"><code class="js spaces">    </code><code class="js keyword">if</code> <code class="js plain">(outputFile == NULL) {</code></div>
<div class="line number20 index19 alt1"><code class="js spaces">        </code><code class="js plain">fprintf(stderr, </code><code class="js string">"Error opening the output file.\n"</code><code class="js plain">);</code></div>
<div class="line number21 index20 alt2"><code class="js spaces">        </code><code class="js keyword">return</code> <code class="js plain">1;</code></div>
<div class="line number22 index21 alt1"><code class="js spaces">    </code><code class="js plain">}</code></div>
<div class="line number23 index22 alt2"><code class="js spaces">    </code><code class="js plain">gdImagePngEx(img, outputFile, 9);</code></div>
<div class="line number24 index23 alt1"><code class="js spaces">    </code><code class="js plain">fclose(outputFile);</code></div>
<div class="line number25 index24 alt2"><code class="js spaces">    </code><code class="js plain">gdImageDestroy(img);</code></div>
<div class="line number26 index25 alt1"><code class="js spaces">    </code><code class="js keyword">return</code> <code class="js plain">0;</code></div>
<div class="line number27 index26 alt2"><code class="js plain">}</code></div>
<div class="line number28 index27 alt1"> </div>
<div class="line number29 index28 alt2"><code class="js plain">void draw_korean_flag(gdImagePtr img) {</code></div>
<div class="line number30 index29 alt1"><code class="js spaces">    </code><code class="js plain">int width = gdImageSX(img);</code></div>
<div class="line number31 index30 alt2"><code class="js spaces">    </code><code class="js plain">int height = gdImageSY(img);</code></div>
<div class="line number32 index31 alt1"><code class="js spaces">    </code><code class="js plain">int red, blue, black, grey, white;</code></div>
<div class="line number33 index32 alt2"><code class="js spaces">    </code><code class="js comments">// according to https://en.wikipedia.org/wiki/Flag_of_South_Korea#/media/File:Flag_of_South_Korea_(construction_sheet).svg</code></div>
<div class="line number34 index33 alt1"><code class="js spaces">    </code><code class="js plain">double scale = width/72;</code></div>
<div class="line number35 index34 alt2"><code class="js spaces">    </code><code class="js plain">int big_circle_dia = (int)24*scale;</code></div>
<div class="line number36 index35 alt1"><code class="js spaces">    </code><code class="js plain">int small_circle_dia = (int) big_circle_dia/2;</code></div>
<div class="line number37 index36 alt2"><code class="js spaces">    </code><code class="js plain">double rot_ang = atan2(48.0, 72.0);</code></div>
<div class="line number38 index37 alt1"><code class="js spaces">    </code><code class="js plain">int center_x = (int)(width / 2);</code></div>
<div class="line number39 index38 alt2"><code class="js spaces">    </code><code class="js plain">int center_y = (int)(height / 2);</code></div>
<div class="line number40 index39 alt1"><code class="js spaces">    </code><code class="js plain">printf(</code><code class="js string">"small_circle_dia is %d\n"</code><code class="js plain">, small_circle_dia);</code></div>
<div class="line number41 index40 alt2"><code class="js spaces">    </code><code class="js plain">int left_center_x = center_x - (small_circle_dia/2)*cos(rot_ang);</code></div>
<div class="line number42 index41 alt1"><code class="js spaces">    </code><code class="js plain">printf(</code><code class="js string">"center_x is %d\n"</code><code class="js plain">, center_x);</code></div>
<div class="line number43 index42 alt2"><code class="js spaces">    </code><code class="js plain">printf(</code><code class="js string">"atan2(48.0, 72.0) is %f\n"</code><code class="js plain">, atan2(48.0, 72.0));</code></div>
<div class="line number44 index43 alt1"><code class="js spaces">    </code><code class="js plain">printf(</code><code class="js string">"left_center_x is %d\n"</code><code class="js plain">, left_center_x);</code></div>
<div class="line number45 index44 alt2"><code class="js spaces">    </code><code class="js plain">int left_center_y = center_y - (small_circle_dia/2)*sin(rot_ang);</code></div>
<div class="line number46 index45 alt1"><code class="js spaces">    </code><code class="js plain">int right_center_x = center_x + (small_circle_dia/2)*cos(rot_ang);</code></div>
<div class="line number47 index46 alt2"><code class="js spaces">    </code><code class="js plain">int right_center_y = center_y + (small_circle_dia/2)*sin(rot_ang);</code></div>
<div class="line number48 index47 alt1"> </div>
<div class="line number49 index48 alt2"><code class="js spaces">    </code><code class="js plain">red = gdImageColorAllocate(img, 255, 0, 0);      </code><code class="js comments">// Red</code></div>
<div class="line number50 index49 alt1"><code class="js spaces">    </code><code class="js plain">blue = gdImageColorAllocate(img, 0, 0, 255);     </code><code class="js comments">// Blue</code></div>
<div class="line number51 index50 alt2"><code class="js spaces">    </code><code class="js plain">black = gdImageColorAllocate(img, 0, 0, 0);      </code><code class="js comments">// Black</code></div>
<div class="line number52 index51 alt1"><code class="js spaces">    </code><code class="js plain">grey = gdImageColorAllocate(img, 125, 125, 125); </code><code class="js comments">// grey</code></div>
<div class="line number53 index52 alt2"><code class="js spaces">    </code><code class="js plain">white = gdImageColorAllocate(img, 255, 255, 255); </code><code class="js comments">// white</code></div>
<div class="line number54 index53 alt1"> </div>
<div class="line number55 index54 alt2"><code class="js spaces">    </code><code class="js plain">gdImageFilledRectangle(img, 0, 0, width, height, white);</code></div>
<div class="line number56 index55 alt1"><code class="js spaces">    </code><code class="js plain">gdImageRectangle(img, 0, 0, width, height, black);</code></div>
<div class="line number57 index56 alt2"> </div>
<div class="line number58 index57 alt1"><code class="js spaces">    </code><code class="js comments">// Draw the big circle outline</code></div>
<div class="line number59 index58 alt2"><code class="js spaces">    </code><code class="js plain">int circle_radius = (int)(height * 2.0 / 5.0);</code></div>
<div class="line number60 index59 alt1"><code class="js spaces">    </code><code class="js plain">gdImageEllipse(img, center_x, center_y, big_circle_dia, big_circle_dia, black);</code></div>
<div class="line number61 index60 alt2"><code class="js spaces">    </code><code class="js comments">// left small circle</code></div>
<div class="line number62 index61 alt1"><code class="js spaces">    </code><code class="js plain">gdImageEllipse(img, left_center_x, left_center_y, small_circle_dia, small_circle_dia, red);</code></div>
<div class="line number63 index62 alt2"><code class="js spaces">    </code><code class="js comments">// right small circle</code></div>
<div class="line number64 index63 alt1"><code class="js spaces">    </code><code class="js plain">gdImageEllipse(img, right_center_x, right_center_y, small_circle_dia, small_circle_dia, blue);</code></div>
<div class="line number65 index64 alt2"><code class="js plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p></p>
<p><img alt="" height="533" src="https://zhe41223118.github.io/cp2023/images/korea2.png" width="800"/></p>
<div>
<div class="syntaxhighlighter js" id="highlighter_676099">
<table border="0" cellpadding="0" cellspacing="0" height="1168" width="648">
<tbody>
<tr style="height: 1166.38px;">
<td class="gutter" style="height: 1166.38px; width: 14px;">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
<div class="line number44 index43 alt1">44</div>
<div class="line number45 index44 alt2">45</div>
<div class="line number46 index45 alt1">46</div>
<div class="line number47 index46 alt2">47</div>
<div class="line number48 index47 alt1">48</div>
<div class="line number49 index48 alt2">49</div>
<div class="line number50 index49 alt1">50</div>
<div class="line number51 index50 alt2">51</div>
<div class="line number52 index51 alt1">52</div>
<div class="line number53 index52 alt2">53</div>
<div class="line number54 index53 alt1">54</div>
<div class="line number55 index54 alt2">55</div>
<div class="line number56 index55 alt1">56</div>
<div class="line number57 index56 alt2">57</div>
<div class="line number58 index57 alt1">58</div>
<div class="line number59 index58 alt2">59</div>
<div class="line number60 index59 alt1">60</div>
<div class="line number61 index60 alt2">61</div>
<div class="line number62 index61 alt1">62</div>
<div class="line number63 index62 alt2">63</div>
<div class="line number64 index63 alt1">64</div>
<div class="line number65 index64 alt2">65</div>
<div class="line number66 index65 alt1">66</div>
<div class="line number67 index66 alt2">67</div>
<div class="line number68 index67 alt1">68</div>
<div class="line number69 index68 alt2">69</div>
<div class="line number70 index69 alt1">70</div>
<div class="line number71 index70 alt2">71</div>
<div class="line number72 index71 alt1">72</div>
<div class="line number73 index72 alt2">73</div>
<div class="line number74 index73 alt1">74</div>
<div class="line number75 index74 alt2">75</div>
<div class="line number76 index75 alt1">76</div>
<div class="line number77 index76 alt2">77</div>
<div class="line number78 index77 alt1">78</div>
<div class="line number79 index78 alt2">79</div>
<div class="line number80 index79 alt1">80</div>
<div class="line number81 index80 alt2">81</div>
<div class="line number82 index81 alt1">82</div>
</td>
<td class="code" style="height: 1166.38px; width: 641.078px;">
<div class="container">
<div class="line number1 index0 alt2"><code class="js preprocessor">#include &lt;stdio.h&gt;</code></div>
<div class="line number2 index1 alt1"><code class="js preprocessor">#include &lt;gd.h&gt;</code></div>
<div class="line number3 index2 alt2"><code class="js preprocessor">#include &lt;math.h&gt;</code></div>
<div class="line number4 index3 alt1"> </div>
<div class="line number5 index4 alt2"><code class="js comments">// Function prototype</code></div>
<div class="line number6 index5 alt1"><code class="js plain">void draw_korean_flag(gdImagePtr img);</code></div>
<div class="line number7 index6 alt2"> </div>
<div class="line number8 index7 alt1"><code class="js plain">int main() {</code></div>
<div class="line number9 index8 alt2"><code class="js spaces">    </code><code class="js comments">// width 3: height 2</code></div>
<div class="line number10 index9 alt1"><code class="js spaces">    </code><code class="js plain">int width = 1200;</code></div>
<div class="line number11 index10 alt2"><code class="js spaces">    </code><code class="js plain">int height = (int)(width * 2.0 / 3.0);</code></div>
<div class="line number12 index11 alt1"> </div>
<div class="line number13 index12 alt2"><code class="js spaces">    </code><code class="js plain">gdImagePtr img = gdImageCreateTrueColor(width, height);</code></div>
<div class="line number14 index13 alt1"><code class="js spaces">    </code><code class="js plain">gdImageAlphaBlending(img, 0);</code></div>
<div class="line number15 index14 alt2"> </div>
<div class="line number16 index15 alt1"><code class="js spaces">    </code><code class="js plain">draw_korean_flag(img);</code></div>
<div class="line number17 index16 alt2"> </div>
<div class="line number18 index17 alt1"><code class="js spaces">    </code><code class="js plain">FILE *outputFile = fopen(</code><code class="js string">"Y:/tmp/2.png"</code><code class="js plain">, </code><code class="js string">"wb"</code><code class="js plain">);</code></div>
<div class="line number19 index18 alt2"><code class="js spaces">    </code><code class="js keyword">if</code> <code class="js plain">(outputFile == NULL) {</code></div>
<div class="line number20 index19 alt1"><code class="js spaces">        </code><code class="js plain">fprintf(stderr, </code><code class="js string">"Error opening the output file.\n"</code><code class="js plain">);</code></div>
<div class="line number21 index20 alt2"><code class="js spaces">        </code><code class="js keyword">return</code> <code class="js plain">1;</code></div>
<div class="line number22 index21 alt1"><code class="js spaces">    </code><code class="js plain">}</code></div>
<div class="line number23 index22 alt2"><code class="js spaces">    </code><code class="js plain">gdImagePngEx(img, outputFile, 9);</code></div>
<div class="line number24 index23 alt1"><code class="js spaces">    </code><code class="js plain">fclose(outputFile);</code></div>
<div class="line number25 index24 alt2"><code class="js spaces">    </code><code class="js plain">gdImageDestroy(img);</code></div>
<div class="line number26 index25 alt1"><code class="js spaces">    </code><code class="js keyword">return</code> <code class="js plain">0;</code></div>
<div class="line number27 index26 alt2"><code class="js plain">}</code></div>
<div class="line number28 index27 alt1"> </div>
<div class="line number29 index28 alt2"><code class="js plain">void draw_korean_flag(gdImagePtr img) {</code></div>
<div class="line number30 index29 alt1"><code class="js spaces">    </code><code class="js plain">int width = gdImageSX(img);</code></div>
<div class="line number31 index30 alt2"><code class="js spaces">    </code><code class="js plain">int height = gdImageSY(img);</code></div>
<div class="line number32 index31 alt1"><code class="js spaces">    </code><code class="js plain">int red, blue, black, grey, white;</code></div>
<div class="line number33 index32 alt2"><code class="js spaces">    </code><code class="js comments">// according to https://en.wikipedia.org/wiki/Flag_of_South_Korea#/media/File:Flag_of_South_Korea_(construction_sheet).svg</code></div>
<div class="line number34 index33 alt1"><code class="js spaces">    </code><code class="js plain">double scale = width/72;</code></div>
<div class="line number35 index34 alt2"><code class="js spaces">    </code><code class="js plain">int big_circle_dia = (int)24*scale;</code></div>
<div class="line number36 index35 alt1"><code class="js spaces">    </code><code class="js plain">int small_circle_dia = (int) big_circle_dia/2;</code></div>
<div class="line number37 index36 alt2"><code class="js spaces">    </code><code class="js plain">double rot_ang = atan2(48.0, 72.0);</code></div>
<div class="line number38 index37 alt1"><code class="js spaces">    </code><code class="js plain">int center_x = (int)(width / 2);</code></div>
<div class="line number39 index38 alt2"><code class="js spaces">    </code><code class="js plain">int center_y = (int)(height / 2);</code></div>
<div class="line number40 index39 alt1"><code class="js spaces">    </code><code class="js plain">printf(</code><code class="js string">"small_circle_dia is %d\n"</code><code class="js plain">, small_circle_dia);</code></div>
<div class="line number41 index40 alt2"><code class="js spaces">    </code><code class="js plain">int left_center_x = center_x - (small_circle_dia/2)*cos(rot_ang);</code></div>
<div class="line number42 index41 alt1"><code class="js spaces">    </code><code class="js plain">printf(</code><code class="js string">"center_x is %d\n"</code><code class="js plain">, center_x);</code></div>
<div class="line number43 index42 alt2"><code class="js spaces">    </code><code class="js plain">printf(</code><code class="js string">"atan2(48.0, 72.0) is %f\n"</code><code class="js plain">, atan2(48.0, 72.0));</code></div>
<div class="line number44 index43 alt1"><code class="js spaces">    </code><code class="js plain">printf(</code><code class="js string">"left_center_x is %d\n"</code><code class="js plain">, left_center_x);</code></div>
<div class="line number45 index44 alt2"><code class="js spaces">    </code><code class="js plain">int left_center_y = center_y - (small_circle_dia/2)*sin(rot_ang);</code></div>
<div class="line number46 index45 alt1"><code class="js spaces">    </code><code class="js plain">int right_center_x = center_x + (small_circle_dia/2)*cos(rot_ang);</code></div>
<div class="line number47 index46 alt2"><code class="js spaces">    </code><code class="js plain">int right_center_y = center_y + (small_circle_dia/2)*sin(rot_ang);</code></div>
<div class="line number48 index47 alt1"> </div>
<div class="line number49 index48 alt2"><code class="js spaces">    </code><code class="js plain">red = gdImageColorAllocate(img, 255, 0, 0);      </code><code class="js comments">// Red</code></div>
<div class="line number50 index49 alt1"><code class="js spaces">    </code><code class="js plain">blue = gdImageColorAllocate(img, 0, 0, 255);     </code><code class="js comments">// Blue</code></div>
<div class="line number51 index50 alt2"><code class="js spaces">    </code><code class="js plain">black = gdImageColorAllocate(img, 0, 0, 0);      </code><code class="js comments">// Black</code></div>
<div class="line number52 index51 alt1"><code class="js spaces">    </code><code class="js plain">grey = gdImageColorAllocate(img, 125, 125, 125); </code><code class="js comments">// grey</code></div>
<div class="line number53 index52 alt2"><code class="js spaces">    </code><code class="js plain">white = gdImageColorAllocate(img, 255, 255, 255); </code><code class="js comments">// white</code></div>
<div class="line number54 index53 alt1"> </div>
<div class="line number55 index54 alt2"><code class="js spaces">    </code><code class="js plain">gdImageFilledRectangle(img, 0, 0, width, height, white);</code></div>
<div class="line number56 index55 alt1"><code class="js spaces">    </code><code class="js plain">gdImageRectangle(img, 0, 0, width, height, black);</code></div>
<div class="line number57 index56 alt2"> </div>
<div class="line number58 index57 alt1"><code class="js spaces">    </code><code class="js comments">// Draw the big circle outline</code></div>
<div class="line number59 index58 alt2"><code class="js spaces">    </code><code class="js plain">int circle_radius = (int)(height * 2.0 / 5.0);</code></div>
<div class="line number60 index59 alt1"><code class="js spaces">    </code><code class="js plain">gdImageEllipse(img, center_x, center_y, big_circle_dia, big_circle_dia, black);</code></div>
<div class="line number61 index60 alt2"><code class="js spaces">    </code><code class="js comments">// left small circle</code></div>
<div class="line number62 index61 alt1"><code class="js spaces">    </code><code class="js plain">gdImageEllipse(img, left_center_x, left_center_y, small_circle_dia, small_circle_dia, red);</code></div>
<div class="line number63 index62 alt2"><code class="js spaces">    </code><code class="js comments">// right small circle</code></div>
<div class="line number64 index63 alt1"><code class="js spaces">    </code><code class="js plain">gdImageEllipse(img, right_center_x, right_center_y, small_circle_dia, small_circle_dia, blue);</code></div>
<div class="line number65 index64 alt2"><code class="js spaces">    </code><code class="js plain">gdImageFill(img, left_center_x, left_center_y, red); </code><code class="js comments">// Fill left small circle with red</code></div>
<div class="line number66 index65 alt1"><code class="js spaces">    </code><code class="js plain">gdImageFill(img, right_center_x, right_center_y - small_circle_dia/2-10, red);</code></div>
<div class="line number67 index66 alt2"><code class="js spaces">    </code><code class="js plain">gdImageFill(img, right_center_x, right_center_y, blue); </code><code class="js comments">// Fill right small circle with blue</code></div>
<div class="line number68 index67 alt1"><code class="js spaces">    </code><code class="js plain">gdImageFill(img, left_center_x, left_center_y + small_circle_dia/2+10, blue);</code></div>
<div class="line number69 index68 alt2"><code class="js spaces">    </code><code class="js plain">gdImageEllipse(img, center_x, center_y, big_circle_dia, big_circle_dia, white);</code></div>
<div class="line number70 index69 alt1"><code class="js spaces">    </code><code class="js comments">// Draw the second circle outline</code></div>
<div class="line number71 index70 alt2"><code class="js spaces">    </code><code class="js plain">gdImageEllipse(img, center_x + circle_radius / 2, center_y, circle_radius * 2, circle_radius * 2, black);</code></div>
<div class="line number72 index71 alt1"> </div>
<div class="line number73 index72 alt2"><code class="js spaces">    </code><code class="js comments">// Flood fill the left area with red</code></div>
<div class="line number74 index73 alt1"><code class="js spaces">    </code><code class="js plain">gdImageFill(img, center_x - circle_radius + 1, center_y, red);</code></div>
<div class="line number75 index74 alt2"> </div>
<div class="line number76 index75 alt1"><code class="js spaces">    </code><code class="js comments">// Flood fill the right area with blue</code></div>
<div class="line number77 index76 alt2"><code class="js spaces">    </code><code class="js plain">gdImageFill(img, center_x + circle_radius + 1, center_y, blue);</code></div>
<div class="line number78 index77 alt1"> </div>
<div class="line number79 index78 alt2"><code class="js spaces">    </code><code class="js comments">// Flood fill the intersection area with yellow</code></div>
<div class="line number80 index79 alt1"><code class="js spaces">    </code><code class="js plain">gdImageFill(img, center_x, center_y, yellow);</code></div>
<div class="line number81 index80 alt2"><code class="js spaces">    </code><code class="js plain">*/</code></div>
<div class="line number82 index81 alt1"><code class="js plain">}</code></div>
<div class="line number82 index81 alt1"><code class="js plain"></code></div>
<div class="line number82 index81 alt1"><code class="js plain"></code></div>
</div>
</td>
</tr>
</tbody>
</table>
Italian
<div>
<div class="syntaxhighlighter cpp" id="highlighter_440707">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="cpp preprocessor">#include &lt;stdio.h&gt;</code></div>
<div class="line number2 index1 alt1"><code class="cpp preprocessor">#include &lt;gd.h&gt;</code></div>
<div class="line number3 index2 alt2"> </div>
<div class="line number4 index3 alt1"><code class="cpp color1 bold">int</code> <code class="cpp plain">main() {</code></div>
<div class="line number5 index4 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">width = 300;  </code><code class="cpp comments">// 宽度</code></div>
<div class="line number6 index5 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">height = 200; </code><code class="cpp comments">// 高度</code></div>
<div class="line number7 index6 alt2"> </div>
<div class="line number8 index7 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePtr image = gdImageCreateTrueColor(width, height);</code></div>
<div class="line number9 index8 alt2"> </div>
<div class="line number10 index9 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">if</code> <code class="cpp plain">(image == NULL) {</code></div>
<div class="line number11 index10 alt2"><code class="cpp spaces">        </code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"Failed to create image.\n"</code><code class="cpp plain">);</code></div>
<div class="line number12 index11 alt1"><code class="cpp spaces">        </code><code class="cpp keyword bold">return</code> <code class="cpp plain">1;</code></div>
<div class="line number13 index12 alt2"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number14 index13 alt1"> </div>
<div class="line number15 index14 alt2"><code class="cpp spaces">    </code><code class="cpp comments">// 确定颜色索引</code></div>
<div class="line number16 index15 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">green = gdImageColorAllocate(image, 0, 128, 0);</code></div>
<div class="line number17 index16 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">white = gdImageColorAllocate(image, 255, 255, 255);</code></div>
<div class="line number18 index17 alt1"><code class="cpp spaces">    </code><code class="cpp color1 bold">int</code> <code class="cpp plain">red = gdImageColorAllocate(image, 255, 0, 0);</code></div>
<div class="line number19 index18 alt2"> </div>
<div class="line number20 index19 alt1"><code class="cpp spaces">    </code><code class="cpp comments">// 填充颜色</code></div>
<div class="line number21 index20 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledRectangle(image, 0, 0, width / 3, height, green);</code></div>
<div class="line number22 index21 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledRectangle(image, width / 3, 0, (width / 3) * 2, height, white);</code></div>
<div class="line number23 index22 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImageFilledRectangle(image, (width / 3) * 2, 0, width, height, red);</code></div>
<div class="line number24 index23 alt1"> </div>
<div class="line number25 index24 alt2"><code class="cpp spaces">    </code><code class="cpp color1 bold">FILE</code> <code class="cpp plain">*outputFile;</code></div>
<div class="line number26 index25 alt1"><code class="cpp spaces">    </code><code class="cpp plain">outputFile = </code><code class="cpp functions bold">fopen</code><code class="cpp plain">(</code><code class="cpp string">"./../images/italian_flag.png"</code><code class="cpp plain">, </code><code class="cpp string">"wb"</code><code class="cpp plain">);</code></div>
<div class="line number27 index26 alt2"> </div>
<div class="line number28 index27 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">if</code> <code class="cpp plain">(outputFile == NULL) {</code></div>
<div class="line number29 index28 alt2"><code class="cpp spaces">        </code><code class="cpp functions bold">printf</code><code class="cpp plain">(</code><code class="cpp string">"Failed to open file for writing.\n"</code><code class="cpp plain">);</code></div>
<div class="line number30 index29 alt1"><code class="cpp spaces">        </code><code class="cpp keyword bold">return</code> <code class="cpp plain">1;</code></div>
<div class="line number31 index30 alt2"><code class="cpp spaces">    </code><code class="cpp plain">}</code></div>
<div class="line number32 index31 alt1"> </div>
<div class="line number33 index32 alt2"><code class="cpp spaces">    </code><code class="cpp plain">gdImagePng(image, outputFile);</code></div>
<div class="line number34 index33 alt1"><code class="cpp spaces">    </code><code class="cpp functions bold">fclose</code><code class="cpp plain">(outputFile);</code></div>
<div class="line number35 index34 alt2"> </div>
<div class="line number36 index35 alt1"><code class="cpp spaces">    </code><code class="cpp plain">gdImageDestroy(image);</code></div>
<div class="line number37 index36 alt2"> </div>
<div class="line number38 index37 alt1"><code class="cpp spaces">    </code><code class="cpp keyword bold">return</code> <code class="cpp plain">0;</code></div>
<div class="line number39 index38 alt2"><code class="cpp plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p><img alt="" height="267" src="https://41223146.github.io/cp2023/images/italian_flag.png" width="400"/></p>
</div>
</div><h1>w11</h1>
<div>
<div class="syntaxhighlighter html" id="highlighter_665252">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="html plain">// 包含標準輸出入程式庫的標頭文件</code></div>
<div class="line number2 index1 alt1"><code class="html plain">#include &lt;</code><code class="html keyword">stdio.h</code><code class="html plain">&gt;</code></div>
<div class="line number3 index2 alt2"><code class="html spaces"> </code> </div>
<div class="line number4 index3 alt1"><code class="html plain">// 主函式</code></div>
<div class="line number5 index4 alt2"><code class="html plain">int main() {</code></div>
<div class="line number6 index5 alt1"><code class="html spaces">    </code><code class="html plain">// Open a file to write displacement and velocity data</code></div>
<div class="line number7 index6 alt2"><code class="html spaces">    </code><code class="html plain">FILE *outputFile = fopen("motion_data.txt", "w");</code></div>
<div class="line number8 index7 alt1"><code class="html spaces">    </code><code class="html plain">if (!outputFile) {</code></div>
<div class="line number9 index8 alt2"><code class="html spaces">        </code><code class="html plain">fprintf(stderr, "Failed to create data file.\n");</code></div>
<div class="line number10 index9 alt1"><code class="html spaces">        </code><code class="html plain">return 1;</code></div>
<div class="line number11 index10 alt2"><code class="html spaces">    </code><code class="html plain">}</code></div>
<div class="line number12 index11 alt1"><code class="html spaces"> </code> </div>
<div class="line number13 index12 alt2"><code class="html spaces">    </code><code class="html plain">// Simulate motion for 10 seconds and calculate displacement and velocity, while writing data to the file</code></div>
<div class="line number14 index13 alt1"><code class="html spaces">    </code><code class="html plain">double x = 0.2;  // Initial displacement</code></div>
<div class="line number15 index14 alt2"><code class="html spaces">    </code><code class="html plain">double v = 0.0;  // Initial velocity</code></div>
<div class="line number16 index15 alt1"><code class="html spaces">    </code><code class="html plain">double dt = 0.01; // Time step</code></div>
<div class="line number17 index16 alt2"><code class="html spaces">    </code><code class="html plain">double t = 0.0;  // Time</code></div>
<div class="line number18 index17 alt1"><code class="html spaces"> </code> </div>
<div class="line number19 index18 alt2"><code class="html spaces">    </code><code class="html plain">while (t &lt;= 10.0) {</code></div>
<div class="line number20 index19 alt1"><code class="html spaces">        </code><code class="html plain">double acceleration = (-10.0 * x - 0.5 * v) / 1.0; // Modified system parameters here</code></div>
<div class="line number21 index20 alt2"><code class="html spaces">        </code><code class="html plain">v += acceleration * dt;</code></div>
<div class="line number22 index21 alt1"><code class="html spaces">        </code><code class="html plain">x += v * dt;</code></div>
<div class="line number23 index22 alt2"><code class="html spaces"> </code> </div>
<div class="line number24 index23 alt1"><code class="html spaces">        </code><code class="html plain">fprintf(outputFile, "%lf %lf %lf\n", t, x, v);</code></div>
<div class="line number25 index24 alt2"><code class="html spaces"> </code> </div>
<div class="line number26 index25 alt1"><code class="html spaces">        </code><code class="html plain">t += dt;</code></div>
<div class="line number27 index26 alt2"><code class="html spaces">    </code><code class="html plain">}</code></div>
<div class="line number28 index27 alt1"><code class="html spaces"> </code> </div>
<div class="line number29 index28 alt2"><code class="html spaces">    </code><code class="html plain">// Close the data file</code></div>
<div class="line number30 index29 alt1"><code class="html spaces">    </code><code class="html plain">fclose(outputFile);</code></div>
<div class="line number31 index30 alt2"><code class="html spaces"> </code> </div>
<div class="line number32 index31 alt1"><code class="html spaces">    </code><code class="html plain">// Start a Gnuplot process using popen</code></div>
<div class="line number33 index32 alt2"><code class="html spaces">    </code><code class="html plain">FILE *gnuplotPipe = popen("gnuplot -persistent", "w");</code></div>
<div class="line number34 index33 alt1"><code class="html spaces">    </code><code class="html plain">if (!gnuplotPipe) {</code></div>
<div class="line number35 index34 alt2"><code class="html spaces">        </code><code class="html plain">fprintf(stderr, "Failed to start Gnuplot.\n");</code></div>
<div class="line number36 index35 alt1"><code class="html spaces">        </code><code class="html plain">return 1;</code></div>
<div class="line number37 index36 alt2"><code class="html spaces">    </code><code class="html plain">}</code></div>
<div class="line number38 index37 alt1"><code class="html spaces"> </code> </div>
<div class="line number39 index38 alt2"><code class="html spaces">    </code><code class="html plain">// Use Gnuplot plotting commands, specify font and output as PNG</code></div>
<div class="line number40 index39 alt1"><code class="html spaces">    </code><code class="html plain">fprintf(gnuplotPipe, "set terminal pngcairo enhanced font 'default,10' size 800,400\n");</code></div>
<div class="line number41 index40 alt2"><code class="html spaces">    </code><code class="html plain">fprintf(gnuplotPipe, "set output './../images/motion_plot.png'\n");</code></div>
<div class="line number42 index41 alt1"><code class="html spaces">    </code><code class="html plain">fprintf(gnuplotPipe, "set title 'Displacement and Velocity vs. Time'\n");</code></div>
<div class="line number43 index42 alt2"><code class="html spaces">    </code><code class="html plain">fprintf(gnuplotPipe, "set xlabel 'Time (s)'\n");</code></div>
<div class="line number44 index43 alt1"><code class="html spaces">    </code><code class="html plain">fprintf(gnuplotPipe, "set ylabel 'Displacement (m)'\n");</code></div>
<div class="line number45 index44 alt2"><code class="html spaces">    </code><code class="html plain">fprintf(gnuplotPipe, "plot 'motion_data.txt' using 1:2 with lines lw 2 title 'Displacement', \</code></div>
<div class="line number46 index45 alt1"><code class="html spaces">                             </code><code class="html plain">'motion_data.txt' using 1:3 with lines lw 2 title 'Velocity'\n");</code></div>
<div class="line number47 index46 alt2"><code class="html spaces"> </code> </div>
<div class="line number48 index47 alt1"><code class="html spaces">    </code><code class="html plain">// Close the Gnuplot process</code></div>
<div class="line number49 index48 alt2"><code class="html spaces">    </code><code class="html plain">fprintf(gnuplotPipe, "exit\n");</code></div>
<div class="line number50 index49 alt1"><code class="html spaces">    </code><code class="html plain">pclose(gnuplotPipe);</code></div>
<div class="line number51 index50 alt2"><code class="html spaces"> </code> </div>
<div class="line number52 index51 alt1"><code class="html spaces">    </code><code class="html plain">return 0;</code></div>
<div class="line number53 index52 alt2"><code class="html plain">}</code></div>
<div class="line number53 index52 alt2"><code class="html plain"><img alt="" height="400" src="https://41223146.github.io/cp2023/images/motion_plot.png" width="800"/></code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div><h2>korea</h2>
<p><img caption="false" height="451" src="https://zhe41223118.github.io/cp2023/images/korean.png" width="677"/></p>
<div>
<div class="syntaxhighlighter js" id="highlighter_775767">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
<div class="line number44 index43 alt1">44</div>
<div class="line number45 index44 alt2">45</div>
<div class="line number46 index45 alt1">46</div>
<div class="line number47 index46 alt2">47</div>
<div class="line number48 index47 alt1">48</div>
<div class="line number49 index48 alt2">49</div>
<div class="line number50 index49 alt1">50</div>
<div class="line number51 index50 alt2">51</div>
<div class="line number52 index51 alt1">52</div>
<div class="line number53 index52 alt2">53</div>
<div class="line number54 index53 alt1">54</div>
<div class="line number55 index54 alt2">55</div>
<div class="line number56 index55 alt1">56</div>
<div class="line number57 index56 alt2">57</div>
<div class="line number58 index57 alt1">58</div>
<div class="line number59 index58 alt2">59</div>
<div class="line number60 index59 alt1">60</div>
<div class="line number61 index60 alt2">61</div>
<div class="line number62 index61 alt1">62</div>
<div class="line number63 index62 alt2">63</div>
<div class="line number64 index63 alt1">64</div>
<div class="line number65 index64 alt2">65</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js preprocessor">#include &lt;stdio.h&gt;</code></div>
<div class="line number2 index1 alt1"><code class="js preprocessor">#include &lt;gd.h&gt;</code></div>
<div class="line number3 index2 alt2"><code class="js preprocessor">#include &lt;math.h&gt;</code></div>
<div class="line number4 index3 alt1"> </div>
<div class="line number5 index4 alt2"><code class="js comments">// Function prototype</code></div>
<div class="line number6 index5 alt1"><code class="js plain">void draw_korean_flag(gdImagePtr img);</code></div>
<div class="line number7 index6 alt2"> </div>
<div class="line number8 index7 alt1"><code class="js plain">int main() {</code></div>
<div class="line number9 index8 alt2"><code class="js spaces">    </code><code class="js comments">// width 3: height 2</code></div>
<div class="line number10 index9 alt1"><code class="js spaces">    </code><code class="js plain">int width = 1200;</code></div>
<div class="line number11 index10 alt2"><code class="js spaces">    </code><code class="js plain">int height = (int)(width * 2.0 / 3.0);</code></div>
<div class="line number12 index11 alt1"> </div>
<div class="line number13 index12 alt2"><code class="js spaces">    </code><code class="js plain">gdImagePtr img = gdImageCreateTrueColor(width, height);</code></div>
<div class="line number14 index13 alt1"><code class="js spaces">    </code><code class="js plain">gdImageAlphaBlending(img, 0);</code></div>
<div class="line number15 index14 alt2"> </div>
<div class="line number16 index15 alt1"><code class="js spaces">    </code><code class="js plain">draw_korean_flag(img);</code></div>
<div class="line number17 index16 alt2"> </div>
<div class="line number18 index17 alt1"><code class="js spaces">    </code><code class="js plain">FILE *outputFile = fopen(</code><code class="js string">"Y:/tmp/c_ex/1.png"</code><code class="js plain">, </code><code class="js string">"wb"</code><code class="js plain">);</code></div>
<div class="line number19 index18 alt2"><code class="js spaces">    </code><code class="js keyword">if</code> <code class="js plain">(outputFile == NULL) {</code></div>
<div class="line number20 index19 alt1"><code class="js spaces">        </code><code class="js plain">fprintf(stderr, </code><code class="js string">"Error opening the output file.\n"</code><code class="js plain">);</code></div>
<div class="line number21 index20 alt2"><code class="js spaces">        </code><code class="js keyword">return</code> <code class="js plain">1;</code></div>
<div class="line number22 index21 alt1"><code class="js spaces">    </code><code class="js plain">}</code></div>
<div class="line number23 index22 alt2"><code class="js spaces">    </code><code class="js plain">gdImagePngEx(img, outputFile, 9);</code></div>
<div class="line number24 index23 alt1"><code class="js spaces">    </code><code class="js plain">fclose(outputFile);</code></div>
<div class="line number25 index24 alt2"><code class="js spaces">    </code><code class="js plain">gdImageDestroy(img);</code></div>
<div class="line number26 index25 alt1"><code class="js spaces">    </code><code class="js keyword">return</code> <code class="js plain">0;</code></div>
<div class="line number27 index26 alt2"><code class="js plain">}</code></div>
<div class="line number28 index27 alt1"> </div>
<div class="line number29 index28 alt2"><code class="js plain">void draw_korean_flag(gdImagePtr img) {</code></div>
<div class="line number30 index29 alt1"><code class="js spaces">    </code><code class="js plain">int width = gdImageSX(img);</code></div>
<div class="line number31 index30 alt2"><code class="js spaces">    </code><code class="js plain">int height = gdImageSY(img);</code></div>
<div class="line number32 index31 alt1"><code class="js spaces">    </code><code class="js plain">int red, blue, black, grey, white;</code></div>
<div class="line number33 index32 alt2"><code class="js spaces">    </code><code class="js comments">// according to https://en.wikipedia.org/wiki/Flag_of_South_Korea#/media/File:Flag_of_South_Korea_(construction_sheet).svg</code></div>
<div class="line number34 index33 alt1"><code class="js spaces">    </code><code class="js plain">double scale = width/72;</code></div>
<div class="line number35 index34 alt2"><code class="js spaces">    </code><code class="js plain">int big_circle_dia = (int)24*scale;</code></div>
<div class="line number36 index35 alt1"><code class="js spaces">    </code><code class="js plain">int small_circle_dia = (int) big_circle_dia/2;</code></div>
<div class="line number37 index36 alt2"><code class="js spaces">    </code><code class="js plain">double rot_ang = atan2(48.0, 72.0);</code></div>
<div class="line number38 index37 alt1"><code class="js spaces">    </code><code class="js plain">int center_x = (int)(width / 2);</code></div>
<div class="line number39 index38 alt2"><code class="js spaces">    </code><code class="js plain">int center_y = (int)(height / 2);</code></div>
<div class="line number40 index39 alt1"><code class="js spaces">    </code><code class="js plain">printf(</code><code class="js string">"small_circle_dia is %d\n"</code><code class="js plain">, small_circle_dia);</code></div>
<div class="line number41 index40 alt2"><code class="js spaces">    </code><code class="js plain">int left_center_x = center_x - (small_circle_dia/2)*cos(rot_ang);</code></div>
<div class="line number42 index41 alt1"><code class="js spaces">    </code><code class="js plain">printf(</code><code class="js string">"center_x is %d\n"</code><code class="js plain">, center_x);</code></div>
<div class="line number43 index42 alt2"><code class="js spaces">    </code><code class="js plain">printf(</code><code class="js string">"atan2(48.0, 72.0) is %f\n"</code><code class="js plain">, atan2(48.0, 72.0));</code></div>
<div class="line number44 index43 alt1"><code class="js spaces">    </code><code class="js plain">printf(</code><code class="js string">"left_center_x is %d\n"</code><code class="js plain">, left_center_x);</code></div>
<div class="line number45 index44 alt2"><code class="js spaces">    </code><code class="js plain">int left_center_y = center_y - (small_circle_dia/2)*sin(rot_ang);</code></div>
<div class="line number46 index45 alt1"><code class="js spaces">    </code><code class="js plain">int right_center_x = center_x + (small_circle_dia/2)*cos(rot_ang);</code></div>
<div class="line number47 index46 alt2"><code class="js spaces">    </code><code class="js plain">int right_center_y = center_y + (small_circle_dia/2)*sin(rot_ang);</code></div>
<div class="line number48 index47 alt1"> </div>
<div class="line number49 index48 alt2"><code class="js spaces">    </code><code class="js plain">red = gdImageColorAllocate(img, 255, 0, 0);      </code><code class="js comments">// Red</code></div>
<div class="line number50 index49 alt1"><code class="js spaces">    </code><code class="js plain">blue = gdImageColorAllocate(img, 0, 0, 255);     </code><code class="js comments">// Blue</code></div>
<div class="line number51 index50 alt2"><code class="js spaces">    </code><code class="js plain">black = gdImageColorAllocate(img, 0, 0, 0);      </code><code class="js comments">// Black</code></div>
<div class="line number52 index51 alt1"><code class="js spaces">    </code><code class="js plain">grey = gdImageColorAllocate(img, 125, 125, 125); </code><code class="js comments">// grey</code></div>
<div class="line number53 index52 alt2"><code class="js spaces">    </code><code class="js plain">white = gdImageColorAllocate(img, 255, 255, 255); </code><code class="js comments">// white</code></div>
<div class="line number54 index53 alt1"> </div>
<div class="line number55 index54 alt2"><code class="js spaces">    </code><code class="js plain">gdImageFilledRectangle(img, 0, 0, width, height, white);</code></div>
<div class="line number56 index55 alt1"><code class="js spaces">    </code><code class="js plain">gdImageRectangle(img, 0, 0, width, height, black);</code></div>
<div class="line number57 index56 alt2"> </div>
<div class="line number58 index57 alt1"><code class="js spaces">    </code><code class="js comments">// Draw the big circle outline</code></div>
<div class="line number59 index58 alt2"><code class="js spaces">    </code><code class="js plain">int circle_radius = (int)(height * 2.0 / 5.0);</code></div>
<div class="line number60 index59 alt1"><code class="js spaces">    </code><code class="js plain">gdImageEllipse(img, center_x, center_y, big_circle_dia, big_circle_dia, black);</code></div>
<div class="line number61 index60 alt2"><code class="js spaces">    </code><code class="js comments">// left small circle</code></div>
<div class="line number62 index61 alt1"><code class="js spaces">    </code><code class="js plain">gdImageEllipse(img, left_center_x, left_center_y, small_circle_dia, small_circle_dia, red);</code></div>
<div class="line number63 index62 alt2"><code class="js spaces">    </code><code class="js comments">// right small circle</code></div>
<div class="line number64 index63 alt1"><code class="js spaces">    </code><code class="js plain">gdImageEllipse(img, right_center_x, right_center_y, small_circle_dia, small_circle_dia, blue);</code></div>
<div class="line number65 index64 alt2"><code class="js plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p></p>
<p><img alt="" height="533" src="https://zhe41223118.github.io/cp2023/images/korea2.png" width="800"/></p>
<div>
<div class="syntaxhighlighter js" id="highlighter_676099">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
<div class="line number2 index1 alt1">2</div>
<div class="line number3 index2 alt2">3</div>
<div class="line number4 index3 alt1">4</div>
<div class="line number5 index4 alt2">5</div>
<div class="line number6 index5 alt1">6</div>
<div class="line number7 index6 alt2">7</div>
<div class="line number8 index7 alt1">8</div>
<div class="line number9 index8 alt2">9</div>
<div class="line number10 index9 alt1">10</div>
<div class="line number11 index10 alt2">11</div>
<div class="line number12 index11 alt1">12</div>
<div class="line number13 index12 alt2">13</div>
<div class="line number14 index13 alt1">14</div>
<div class="line number15 index14 alt2">15</div>
<div class="line number16 index15 alt1">16</div>
<div class="line number17 index16 alt2">17</div>
<div class="line number18 index17 alt1">18</div>
<div class="line number19 index18 alt2">19</div>
<div class="line number20 index19 alt1">20</div>
<div class="line number21 index20 alt2">21</div>
<div class="line number22 index21 alt1">22</div>
<div class="line number23 index22 alt2">23</div>
<div class="line number24 index23 alt1">24</div>
<div class="line number25 index24 alt2">25</div>
<div class="line number26 index25 alt1">26</div>
<div class="line number27 index26 alt2">27</div>
<div class="line number28 index27 alt1">28</div>
<div class="line number29 index28 alt2">29</div>
<div class="line number30 index29 alt1">30</div>
<div class="line number31 index30 alt2">31</div>
<div class="line number32 index31 alt1">32</div>
<div class="line number33 index32 alt2">33</div>
<div class="line number34 index33 alt1">34</div>
<div class="line number35 index34 alt2">35</div>
<div class="line number36 index35 alt1">36</div>
<div class="line number37 index36 alt2">37</div>
<div class="line number38 index37 alt1">38</div>
<div class="line number39 index38 alt2">39</div>
<div class="line number40 index39 alt1">40</div>
<div class="line number41 index40 alt2">41</div>
<div class="line number42 index41 alt1">42</div>
<div class="line number43 index42 alt2">43</div>
<div class="line number44 index43 alt1">44</div>
<div class="line number45 index44 alt2">45</div>
<div class="line number46 index45 alt1">46</div>
<div class="line number47 index46 alt2">47</div>
<div class="line number48 index47 alt1">48</div>
<div class="line number49 index48 alt2">49</div>
<div class="line number50 index49 alt1">50</div>
<div class="line number51 index50 alt2">51</div>
<div class="line number52 index51 alt1">52</div>
<div class="line number53 index52 alt2">53</div>
<div class="line number54 index53 alt1">54</div>
<div class="line number55 index54 alt2">55</div>
<div class="line number56 index55 alt1">56</div>
<div class="line number57 index56 alt2">57</div>
<div class="line number58 index57 alt1">58</div>
<div class="line number59 index58 alt2">59</div>
<div class="line number60 index59 alt1">60</div>
<div class="line number61 index60 alt2">61</div>
<div class="line number62 index61 alt1">62</div>
<div class="line number63 index62 alt2">63</div>
<div class="line number64 index63 alt1">64</div>
<div class="line number65 index64 alt2">65</div>
<div class="line number66 index65 alt1">66</div>
<div class="line number67 index66 alt2">67</div>
<div class="line number68 index67 alt1">68</div>
<div class="line number69 index68 alt2">69</div>
<div class="line number70 index69 alt1">70</div>
<div class="line number71 index70 alt2">71</div>
<div class="line number72 index71 alt1">72</div>
<div class="line number73 index72 alt2">73</div>
<div class="line number74 index73 alt1">74</div>
<div class="line number75 index74 alt2">75</div>
<div class="line number76 index75 alt1">76</div>
<div class="line number77 index76 alt2">77</div>
<div class="line number78 index77 alt1">78</div>
<div class="line number79 index78 alt2">79</div>
<div class="line number80 index79 alt1">80</div>
<div class="line number81 index80 alt2">81</div>
<div class="line number82 index81 alt1">82</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="js preprocessor">#include &lt;stdio.h&gt;</code></div>
<div class="line number2 index1 alt1"><code class="js preprocessor">#include &lt;gd.h&gt;</code></div>
<div class="line number3 index2 alt2"><code class="js preprocessor">#include &lt;math.h&gt;</code></div>
<div class="line number4 index3 alt1"> </div>
<div class="line number5 index4 alt2"><code class="js comments">// Function prototype</code></div>
<div class="line number6 index5 alt1"><code class="js plain">void draw_korean_flag(gdImagePtr img);</code></div>
<div class="line number7 index6 alt2"> </div>
<div class="line number8 index7 alt1"><code class="js plain">int main() {</code></div>
<div class="line number9 index8 alt2"><code class="js spaces">    </code><code class="js comments">// width 3: height 2</code></div>
<div class="line number10 index9 alt1"><code class="js spaces">    </code><code class="js plain">int width = 1200;</code></div>
<div class="line number11 index10 alt2"><code class="js spaces">    </code><code class="js plain">int height = (int)(width * 2.0 / 3.0);</code></div>
<div class="line number12 index11 alt1"> </div>
<div class="line number13 index12 alt2"><code class="js spaces">    </code><code class="js plain">gdImagePtr img = gdImageCreateTrueColor(width, height);</code></div>
<div class="line number14 index13 alt1"><code class="js spaces">    </code><code class="js plain">gdImageAlphaBlending(img, 0);</code></div>
<div class="line number15 index14 alt2"> </div>
<div class="line number16 index15 alt1"><code class="js spaces">    </code><code class="js plain">draw_korean_flag(img);</code></div>
<div class="line number17 index16 alt2"> </div>
<div class="line number18 index17 alt1"><code class="js spaces">    </code><code class="js plain">FILE *outputFile = fopen(</code><code class="js string">"Y:/tmp/2.png"</code><code class="js plain">, </code><code class="js string">"wb"</code><code class="js plain">);</code></div>
<div class="line number19 index18 alt2"><code class="js spaces">    </code><code class="js keyword">if</code> <code class="js plain">(outputFile == NULL) {</code></div>
<div class="line number20 index19 alt1"><code class="js spaces">        </code><code class="js plain">fprintf(stderr, </code><code class="js string">"Error opening the output file.\n"</code><code class="js plain">);</code></div>
<div class="line number21 index20 alt2"><code class="js spaces">        </code><code class="js keyword">return</code> <code class="js plain">1;</code></div>
<div class="line number22 index21 alt1"><code class="js spaces">    </code><code class="js plain">}</code></div>
<div class="line number23 index22 alt2"><code class="js spaces">    </code><code class="js plain">gdImagePngEx(img, outputFile, 9);</code></div>
<div class="line number24 index23 alt1"><code class="js spaces">    </code><code class="js plain">fclose(outputFile);</code></div>
<div class="line number25 index24 alt2"><code class="js spaces">    </code><code class="js plain">gdImageDestroy(img);</code></div>
<div class="line number26 index25 alt1"><code class="js spaces">    </code><code class="js keyword">return</code> <code class="js plain">0;</code></div>
<div class="line number27 index26 alt2"><code class="js plain">}</code></div>
<div class="line number28 index27 alt1"> </div>
<div class="line number29 index28 alt2"><code class="js plain">void draw_korean_flag(gdImagePtr img) {</code></div>
<div class="line number30 index29 alt1"><code class="js spaces">    </code><code class="js plain">int width = gdImageSX(img);</code></div>
<div class="line number31 index30 alt2"><code class="js spaces">    </code><code class="js plain">int height = gdImageSY(img);</code></div>
<div class="line number32 index31 alt1"><code class="js spaces">    </code><code class="js plain">int red, blue, black, grey, white;</code></div>
<div class="line number33 index32 alt2"><code class="js spaces">    </code><code class="js comments">// according to https://en.wikipedia.org/wiki/Flag_of_South_Korea#/media/File:Flag_of_South_Korea_(construction_sheet).svg</code></div>
<div class="line number34 index33 alt1"><code class="js spaces">    </code><code class="js plain">double scale = width/72;</code></div>
<div class="line number35 index34 alt2"><code class="js spaces">    </code><code class="js plain">int big_circle_dia = (int)24*scale;</code></div>
<div class="line number36 index35 alt1"><code class="js spaces">    </code><code class="js plain">int small_circle_dia = (int) big_circle_dia/2;</code></div>
<div class="line number37 index36 alt2"><code class="js spaces">    </code><code class="js plain">double rot_ang = atan2(48.0, 72.0);</code></div>
<div class="line number38 index37 alt1"><code class="js spaces">    </code><code class="js plain">int center_x = (int)(width / 2);</code></div>
<div class="line number39 index38 alt2"><code class="js spaces">    </code><code class="js plain">int center_y = (int)(height / 2);</code></div>
<div class="line number40 index39 alt1"><code class="js spaces">    </code><code class="js plain">printf(</code><code class="js string">"small_circle_dia is %d\n"</code><code class="js plain">, small_circle_dia);</code></div>
<div class="line number41 index40 alt2"><code class="js spaces">    </code><code class="js plain">int left_center_x = center_x - (small_circle_dia/2)*cos(rot_ang);</code></div>
<div class="line number42 index41 alt1"><code class="js spaces">    </code><code class="js plain">printf(</code><code class="js string">"center_x is %d\n"</code><code class="js plain">, center_x);</code></div>
<div class="line number43 index42 alt2"><code class="js spaces">    </code><code class="js plain">printf(</code><code class="js string">"atan2(48.0, 72.0) is %f\n"</code><code class="js plain">, atan2(48.0, 72.0));</code></div>
<div class="line number44 index43 alt1"><code class="js spaces">    </code><code class="js plain">printf(</code><code class="js string">"left_center_x is %d\n"</code><code class="js plain">, left_center_x);</code></div>
<div class="line number45 index44 alt2"><code class="js spaces">    </code><code class="js plain">int left_center_y = center_y - (small_circle_dia/2)*sin(rot_ang);</code></div>
<div class="line number46 index45 alt1"><code class="js spaces">    </code><code class="js plain">int right_center_x = center_x + (small_circle_dia/2)*cos(rot_ang);</code></div>
<div class="line number47 index46 alt2"><code class="js spaces">    </code><code class="js plain">int right_center_y = center_y + (small_circle_dia/2)*sin(rot_ang);</code></div>
<div class="line number48 index47 alt1"> </div>
<div class="line number49 index48 alt2"><code class="js spaces">    </code><code class="js plain">red = gdImageColorAllocate(img, 255, 0, 0);      </code><code class="js comments">// Red</code></div>
<div class="line number50 index49 alt1"><code class="js spaces">    </code><code class="js plain">blue = gdImageColorAllocate(img, 0, 0, 255);     </code><code class="js comments">// Blue</code></div>
<div class="line number51 index50 alt2"><code class="js spaces">    </code><code class="js plain">black = gdImageColorAllocate(img, 0, 0, 0);      </code><code class="js comments">// Black</code></div>
<div class="line number52 index51 alt1"><code class="js spaces">    </code><code class="js plain">grey = gdImageColorAllocate(img, 125, 125, 125); </code><code class="js comments">// grey</code></div>
<div class="line number53 index52 alt2"><code class="js spaces">    </code><code class="js plain">white = gdImageColorAllocate(img, 255, 255, 255); </code><code class="js comments">// white</code></div>
<div class="line number54 index53 alt1"> </div>
<div class="line number55 index54 alt2"><code class="js spaces">    </code><code class="js plain">gdImageFilledRectangle(img, 0, 0, width, height, white);</code></div>
<div class="line number56 index55 alt1"><code class="js spaces">    </code><code class="js plain">gdImageRectangle(img, 0, 0, width, height, black);</code></div>
<div class="line number57 index56 alt2"> </div>
<div class="line number58 index57 alt1"><code class="js spaces">    </code><code class="js comments">// Draw the big circle outline</code></div>
<div class="line number59 index58 alt2"><code class="js spaces">    </code><code class="js plain">int circle_radius = (int)(height * 2.0 / 5.0);</code></div>
<div class="line number60 index59 alt1"><code class="js spaces">    </code><code class="js plain">gdImageEllipse(img, center_x, center_y, big_circle_dia, big_circle_dia, black);</code></div>
<div class="line number61 index60 alt2"><code class="js spaces">    </code><code class="js comments">// left small circle</code></div>
<div class="line number62 index61 alt1"><code class="js spaces">    </code><code class="js plain">gdImageEllipse(img, left_center_x, left_center_y, small_circle_dia, small_circle_dia, red);</code></div>
<div class="line number63 index62 alt2"><code class="js spaces">    </code><code class="js comments">// right small circle</code></div>
<div class="line number64 index63 alt1"><code class="js spaces">    </code><code class="js plain">gdImageEllipse(img, right_center_x, right_center_y, small_circle_dia, small_circle_dia, blue);</code></div>
<div class="line number65 index64 alt2"><code class="js spaces">    </code><code class="js plain">gdImageFill(img, left_center_x, left_center_y, red); </code><code class="js comments">// Fill left small circle with red</code></div>
<div class="line number66 index65 alt1"><code class="js spaces">    </code><code class="js plain">gdImageFill(img, right_center_x, right_center_y - small_circle_dia/2-10, red);</code></div>
<div class="line number67 index66 alt2"><code class="js spaces">    </code><code class="js plain">gdImageFill(img, right_center_x, right_center_y, blue); </code><code class="js comments">// Fill right small circle with blue</code></div>
<div class="line number68 index67 alt1"><code class="js spaces">    </code><code class="js plain">gdImageFill(img, left_center_x, left_center_y + small_circle_dia/2+10, blue);</code></div>
<div class="line number69 index68 alt2"><code class="js spaces">    </code><code class="js plain">gdImageEllipse(img, center_x, center_y, big_circle_dia, big_circle_dia, white);</code></div>
<div class="line number70 index69 alt1"><code class="js spaces">    </code><code class="js comments">// Draw the second circle outline</code></div>
<div class="line number71 index70 alt2"><code class="js spaces">    </code><code class="js plain">gdImageEllipse(img, center_x + circle_radius / 2, center_y, circle_radius * 2, circle_radius * 2, black);</code></div>
<div class="line number72 index71 alt1"> </div>
<div class="line number73 index72 alt2"><code class="js spaces">    </code><code class="js comments">// Flood fill the left area with red</code></div>
<div class="line number74 index73 alt1"><code class="js spaces">    </code><code class="js plain">gdImageFill(img, center_x - circle_radius + 1, center_y, red);</code></div>
<div class="line number75 index74 alt2"> </div>
<div class="line number76 index75 alt1"><code class="js spaces">    </code><code class="js comments">// Flood fill the right area with blue</code></div>
<div class="line number77 index76 alt2"><code class="js spaces">    </code><code class="js plain">gdImageFill(img, center_x + circle_radius + 1, center_y, blue);</code></div>
<div class="line number78 index77 alt1"> </div>
<div class="line number79 index78 alt2"><code class="js spaces">    </code><code class="js comments">// Flood fill the intersection area with yellow</code></div>
<div class="line number80 index79 alt1"><code class="js spaces">    </code><code class="js plain">gdImageFill(img, center_x, center_y, yellow);</code></div>
<div class="line number81 index80 alt2"><code class="js spaces">    </code><code class="js plain">*/</code></div>
<div class="line number82 index81 alt1"><code class="js plain">}</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p></p><h1>w12</h1>
<p><em><span style="color: #ff0000;"><strong>範例1</strong></span></em></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
#include &lt;gd.h&gt;
#include &lt;math.h&gt;
 
// Declare the rotation function
void rotateFilledPolygon(int x_orig, int y_orig, double rotation_ang, gdPoint *points, int num_points) {
    int i;
    double angle_rad = rotation_ang * M_PI / 180.0;
 
    for (i = 0; i &lt; num_points; i++) {
        int x = points[i].x - x_orig;
        int y = points[i].y - y_orig;
 
        points[i].x = x_orig + (int)(x * cos(angle_rad) - y * sin(angle_rad));
        points[i].y = y_orig + (int)(x * sin(angle_rad) + y * cos(angle_rad));
    }
}
 
int main() {
    int width = 800;
    int height = 600;
 
    gdImagePtr img = gdImageCreateTrueColor(width, height);
    gdImageAlphaBlending(img, 0);
 
    FILE *outputFile = fopen("hellogd1.png", "wb");
    if (outputFile == NULL) {
        fprintf(stderr, "Error opening the output file.\n");
        return 1;
    }
 
    int red = gdImageColorAllocate(img, 255, 0, 0);
    int blue = gdImageColorAllocate(img, 0, 0, 255);
    int black = gdImageColorAllocate(img, 0, 0, 0);
    int white = gdImageColorAllocate(img, 255, 255, 255);
 
    gdImageFilledRectangle(img, 0, 0, width, height, white);
    gdImageFilledRectangle(img, 0, 0, (int)width / 4, (int)height / 4, blue);
 
    gdImageFilledEllipse(img, (int)width * 3 / 4, (int)height / 4, (int)width / 4, (int)width / 4, red);
    gdImageEllipse(img, (int)width * 3 / 4, (int)height * 3 / 4, (int)width / 4, (int)width / 4, red);
    gdImageLine(img, (int)width / 2, (int)height / 2, (int)width / 2, (int)height / 2 + 100, blue);
 
    gdPoint points[4];
    points[0].x = (int)width / 4;
    points[0].y = (int)height * 3 / 4;
    points[1].x = points[0].x + 100;
    points[1].y = points[0].y;
    points[2].x = points[1].x;
    points[2].y = points[1].y + 100;
    points[3].x = points[2].x - 100;
    points[3].y = points[2].y;
 
    // Call the rotation function
    rotateFilledPolygon((int)width / 4 + 50, (int)height * 3 / 4 + 50, 45.0, points, 4);
    gdImagePolygon(img, points, 4, black);
 
    gdPoint points2[4];
    points2[0].x = (int)width / 3;
    points2[0].y = (int)height / 2;
    points2[1].x = points2[0].x + 100;
    points2[1].y = points2[0].y;
    points2[2].x = points2[1].x;
    points2[2].y = points2[1].y + 100;
    points2[3].x = points2[2].x - 150;
    points2[3].y = points2[2].y;
 
    // Call the rotation function
    rotateFilledPolygon((int)width / 3 + 50, (int)height / 2 + 50, 30.0, points2, 4);
    gdImageFilledPolygon(img, points2, 4, red);
 
    gdImagePngEx(img, outputFile, 9);
    fclose(outputFile);
    gdImageDestroy(img);
 
    return 0;
}</pre>
<p><img alt="" height="300" src="/images/hellogd1.png" width="400"/></p><h2>範例2</h2>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">#include &lt;stdio.h&gt;
#include &lt;gd.h&gt;
#include &lt;math.h&gt;
 
// Declare the rotation function
void rotateFilledPolygon(int x_orig, int y_orig, double rotation_ang, gdPoint *points, int num_points) {
    int i;
    double angle_rad = rotation_ang * M_PI / 180.0;
 
    for (i = 0; i &lt; num_points; i++) {
        int x = points[i].x - x_orig;
        int y = points[i].y - y_orig;
 
        points[i].x = x_orig + (int)(x * cos(angle_rad) - y * sin(angle_rad));
        points[i].y = y_orig + (int)(x * sin(angle_rad) + y * cos(angle_rad));
    }
}
 
int main() {
    int width = 800;
    int height = 600;
 
    gdImagePtr img = gdImageCreateTrueColor(width, height);
    gdImageAlphaBlending(img, 0);
 
    FILE *outputFile = fopen("Y:/tmp/c_ex/42.png", "wb");
    if (outputFile == NULL) {
        fprintf(stderr, "Error opening the output file.\n");
        return 1;
    }
 
    int red = gdImageColorAllocate(img, 255, 0, 0);
    int blue = gdImageColorAllocate(img, 0, 0, 255);
    int black = gdImageColorAllocate(img, 0, 0, 0);
    int white = gdImageColorAllocate(img, 255, 255, 255);
 
    gdImageFilledRectangle(img, 0, 0, width, height, white);
    gdImageFilledRectangle(img, 0, 0, (int)width / 4, (int)height / 4, blue);
 
    gdImageFilledEllipse(img, (int)width * 3 / 4, (int)height / 4, (int)width / 4, (int)width / 4, red);
    gdImageEllipse(img, (int)width * 3 / 4, (int)height * 3 / 4, (int)width / 4, (int)width / 4, red);
    gdImageLine(img, (int)width / 2, (int)height / 2, (int)width / 2, (int)height / 2 + 100, blue);
 
    gdPoint points[4];
    points[0].x = (int)width / 4;
    points[0].y = (int)height * 3 / 4;
    points[1].x = points[0].x + 100;
    points[1].y = points[0].y;
    points[2].x = points[1].x;
    points[2].y = points[1].y + 100;
    points[3].x = points[2].x - 100;
    points[3].y = points[2].y;
 
    // Call the rotation function multiple times
    for (int i = 0; i &lt; 4; i++) {
        rotateFilledPolygon((int)width / 4 + 50, (int)height * 3 / 4 + 50, 30.0, points, 4);
        gdImagePolygon(img, points, 4, black);
    }
 
    gdPoint points2[4];
    points2[0].x = (int)width / 3;
    points2[0].y = (int)height / 2;
    points2[1].x = points2[0].x + 100;
    points2[1].y = points2[0].y;
    points2[2].x = points2[1].x;
    points2[2].y = points2[1].y + 100;
    points2[3].x = points2[2].x - 150;
    points2[3].y = points2[2].y;
 
    // Call the rotation function multiple times
    for (int i = 0; i &lt; 12; i++) {
        //rotateFilledPolygon((int)width / 3 + 50, (int)height / 2 + 50, 30.0, points2, 4);
        rotateFilledPolygon(500, 200, 30.0, points2, 4);
        gdImageFilledPolygon(img, points2, 4, red);
    }
 
    gdImagePngEx(img, outputFile, 9);
    fclose(outputFile);
    gdImageDestroy(img);
 
    return 0;
}</pre>
<p><img alt="" height="300" src="/images/42.png" width="400"/></p>
<h2>遇到的問題與解決</h2>
<p><img alt="" height="308" src="/images/001.png" width="400"/></p>
<p></p>
<p></p><h1>w13</h1>
<p>一開始聽到這堂課的名字的時候，就知道說這堂課一定很重要，後來去google了一下，原來是在學有關C語言和程式的課程，一開始的我對這堂課起了很大的興趣，上課都很認真聽看老師做一步我跟著做一步，但是後來因為我電腦不好的關係，所以到後面漸漸地跟不上上課進度，曾經有一度想過要放棄，但是每次在課堂的最後老師都會花一點時間來勉勵我們，才讓我沒有放棄堅持到了現在，雖然這學期快結束了，我還是有一些作業沒有做完，但是我會盡力的!!!!!</p>
<h1>file</h1>
<p><span><strong>檔案總攬</strong></span></p>
<p></p>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/41223118_nfu_edu_tw/Eec_-ybdlwJNivkSRcOLz4MB8Eh2HFpms2CrgpKLt8hOcw">tinyc.7z</a> (<span>Tiny C Compiler 編譯 C 程式, 包含 gd 與 gnuplot)</span></p>
<p><span></span></p>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/41223118_nfu_edu_tw/EZivhkrZZ1VKnNPhGJLt5dIBeQ7uU5AV1EdxH-3xAHUl4w?e=5cJkvx">w11_1a.7z</a> (<span>網路設定檔案)</span></p>
<p><span></span></p>
<p><span><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/41223118_nfu_edu_tw/EQKYzpSpfetGj0iMQnDcdYABjabAA5Fi3cjiyunroXrQgg?e=yMDip4">python3114_git_putty.7z</a> (將近端 cmsimde 啟動並改版後推向 Github 所需的檔案)</span></p>
<p><span></span></p>
<p><span><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/41223118_nfu_edu_tw/ESq5mIzxtwtGvzJ7KAjQqFIBxvfkE2Yo3dg3CKTdb9rNtw?e=7AgepA">tcc_w_gd_raylib_SDL2.7z</a> (新版tcc)</span></p>
<h1>note</h1>
<h2>ssh</h2>
<p>下載putty</p>
<p>在putty資料夾內開啟puttygen.exe做一把金鑰匙</p>
<p>將key儲存在github帳號內(開啟設定點選ssh)</p>
<p>回到puttygen.exe按save private key即可</p>
<p>接著再開啟putty</p>
<p>Host Name輸入github.com</p>
<p>Saved Sessions輸入自己的學號</p>
<p><img alt="" height="391" src="/images/1.png" width="400"/></p>
<p><span>點選proxy改設定</span></p>
<p><span><img alt="" height="391" src="/images/2.png" width="400"/></span><br/><br/><span>再點選ssh內的Auth裡面Credentials</span></p>
<p><img alt="" height="391" src="/images/3.png" width="400"/></p>
<p>finish</p>
<h2>key</h2>
<p>使用puttygen.exe定位主機位置獲得key(點Generate)</p>
<p><img alt="" height="288" src="https://41223136.github.io/cp2023/images/puttygen.png" width="400"/></p>
<p>點選之後並在視窗內移動</p>
<p><img alt="" height="288" src="https://41223136.github.io/cp2023/images/puttygen1.png" width="400"/></p>
<p>複製ssh-rsa的內容<span>全部</span></p>
<p>再到github帳號setting的ssh and gpg keys新增一把key</p>
<p>把剛剛複製的key-rsa貼上之後點save private key 即可!</p>
<p>儲存到<span>tinyc-data-home<span> </span></span>名稱:學號</p>
<p>將鑰匙儲存在自己的USB當中</p><h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍)</h4>
<h4>Variables (<a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py">Python Keywords</a>)</h4>
<h4>Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解)</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a> (整數 int(), 浮點數 float())</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a> (字串)</h4>
<h4>print (Python 內建函式, <a href="https://docs.python.org/3/library/functions.html#print">print()</a> 函式)</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>